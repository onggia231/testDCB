<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
>
<h:head>
</h:head>
<h:body>
    <ui:composition>
        <div class="ui-fluid">
            <div class="ui-g">
                <div class="ui-g-6 ui-md-3 ui-lg-2">
                    <p:commandButton id="startButton" type="button" value="Start" styleClass="btn-success"/>
                </div>
                <div class="ui-g-6 ui-md-3 ui-lg-2">
                    <p:commandButton id="resetButton" type="button" value="Reset" styleClass=""/>
                </div>
            </div>

            <div class="ui-g">
                <div class="ui-g-12 ui-md-6 ui-lg-6">
                    <video id="video" width="100%" style="border: 1px solid gray"/>
                </div>
            </div>

            <div class="ui-g">
                <div class="ui-g-12 ui-md-6 ui-lg-6">
                    <div id="sourceSelectPanel" style="display:none">
                        <label for="sourceSelect">Change video source:</label>
                        <select id="sourceSelect" style="width:100%">
                        </select>
                    </div>
                </div>
            </div>

            <div class="ui-g">
                <div class="ui-g-12 ui-md-6 ui-lg-6">
                    <label>Result:</label>
                    <pre><code id="result"></code></pre>
                </div>
            </div>

            <script type="text/javascript" src="https://unpkg.com/@zxing/library@latest"></script>
            <script type="text/javascript">
                //<![CDATA[
                window.onload = function () {
                    let selectedDeviceId;
                    const codeReader = new ZXing.BrowserMultiFormatReader();
                    console.log('ZXing code reader initialized');

                    codeReader.getVideoInputDevices().then((videoInputDevices) => {
                        const sourceSelect = document.getElementById('sourceSelect');
                        selectedDeviceId = videoInputDevices[0].deviceId;

                        if (videoInputDevices.length >= 1) {
                            videoInputDevices.forEach((element) => {
                                const sourceOption = document.createElement('option');
                                sourceOption.text = element.label;
                                sourceOption.value = element.deviceId;
                                sourceSelect.appendChild(sourceOption);
                            });

                            sourceSelect.onchange = () => {
                                selectedDeviceId = sourceSelect.value;
                            };

                            const sourceSelectPanel = document.getElementById('sourceSelectPanel');
                            sourceSelectPanel.style.display = 'block';
                        }

                        $("[id='form_main:startButton']").click(function () {
                            codeReader.decodeFromVideoDevice(selectedDeviceId, 'video', (result, err) => {
                                if (result) {
                                    console.log(result);
                                    document.getElementById('result').textContent = result.text;
                                }
                                if (err && !(err instanceof ZXing.NotFoundException)) {
                                    console.error(err);
                                    document.getElementById('result').textContent = err;
                                }
                            })
                            console.log(`Started continous decode from camera with id ${selectedDeviceId}`);
                        });

                        $("[id='form_main:resetButton']").click(function () {
                            codeReader.reset();
                            document.getElementById('result').textContent = '';
                            console.log('Reset.');
                        })

                    }).catch((err) => {
                        console.error(err);
                    })
                };
                //]]>
            </script>
        </div>
    </ui:composition>
</h:body>
</html>